// File generated by: write_lattice_in_foreign_format;
// Bmad lattice file: RCS_Val_test2.bmad;

beam_def: Beam, Particle = Electron, Energy = 0.75, Npart = 0;
option, -info, -echo;
ang = 2*PI/320;

/// ARC Elements
//B0: sbend, l = 1.81602917219348, angle = 0.01963495, e1 = 9.817475E-3, e2 = 9.817475E-3;
B0: rbend, l = 1.816, angle=ang;
QD: quadrupole, l = 0.71, k1 := kqdarc;
QF: quadrupole, l = 0.71, k1 := kqfarc;
SD: sextupole, l = 0.2, k2 := ksdarc;
SF: sextupole, l = 0.2, k2 := ksfarc;
SDS: DRIFT, l=0.2;
SFS: DRIFT, l=0.2;
COR: kicker, l=0.257;


DLO: DRIFT, l=0.09595;
B: line=(DLO,B0,DLO);

QLO: DRIFT, l=0.055;
BPM: MONITOR, l=0.02;
CLO: DRIFT, l=0.038;
SLO: DRIFT, l=0.05;
DBEL: DRIFT, l=0.291064+0.0006/2;
VACT: DRIFT, l=0.28411;
DSQ: DRIFT, l=0.059654;



ArcMain: line=(QF, QLO, BPM, CLO, COR, CLO, DBEL,B,VACT,SLO,SD,SLO,DSQ,QLO,
QD, QLO,BPM, CLO, COR, CLO, DBEL,B,VACT,SLO,SF,SLO,DSQ,QLO);

BEArcMain: line=(QF, QLO, BPM, CLO, COR, CLO, DBEL,B,VACT,SLO,SDS,SLO,DSQ,QLO,
QD, QLO,BPM, CLO, COR, CLO, DBEL,B,VACT,SLO,SFS,SLO,DSQ,QLO);

ARC: line=(BEArcMain,78*ArcMain,BEArcMain);

/// Straight Section Elements
QFSH: quadrupole, l = 0.235, k1 := kqfstr;
QFS: quadrupole, l = 0.47, k1 := kqfstr; 
QDS: quadrupole, l = 0.47, k1 := kqdstr;
MQF11: quadrupole, l = 0.47, k1 :=kmqf11;
MQF21: quadrupole, l = 0.47, k1 := kmqf21;

MQD11: quadrupole, l = 0.71, k1 := kmqd11;
MQD21: quadrupole, l = 0.71, k1 := kmqd21;



MQA: DRIFT, l=2.331;
MQA1: DRIFT, l=4.547;
MQA2: DRIFT, l=2.451;
MQA3: DRIFT, l=0.453;
MQA4: DRIFT, l=5.867;
MQA5: DRIFT, l=5.572;

STRRF: drift, l = 2.207;
RFC_D: drift, l = 1;


MEND0: marker;
MBEG0: marker;

MEND: marker;
MBEG: marker;
RFC: rfcavity, l = 1, volt = 1.12, lag = 0.5, harmon = 2802;
END: marker;

//---------------------------------;


Insertion2: line = ( MBEG0, QF, QLO, BPM, CLO, COR, CLO, MQA,
QLO, MQD21, QLO, BPM, CLO, COR, CLO, MQA1,
QLO, MQF21, QLO, BPM, CLO, COR, CLO, MQA2,
QLO, MQD11, QLO, BPM, CLO, COR, CLO, MQA2,
QLO, MQF11, QLO, BPM, CLO, COR, CLO, STRRF,RFC_D,STRRF,MQA3,
QLO, QDS,   QLO, BPM, CLO, COR, CLO, MQA4, QLO, QFS, QLO, BPM, CLO, COR, CLO, MQA4,
QLO, QDS,   QLO, BPM, CLO, COR, CLO, MQA4, QLO, QFSH );

Insertion1: line = ( QFSH, QLO, BPM, CLO, COR, CLO, MQA4,
QLO, QDS,   QLO, BPM, CLO, COR, CLO, MQA4, QLO, QFS, QLO, BPM, CLO, COR, CLO, MQA4,
QLO, QDS,   QLO, BPM, CLO, COR, CLO, MQA4,
QLO, MQF11, QLO, BPM, CLO, COR, CLO, MQA2,
QLO, MQD11, QLO, BPM, CLO, COR, CLO, MQA2,
QLO, MQF21, QLO, BPM, CLO, COR, CLO, MQA1,
QLO, MQD21, QLO, BPM, CLO, COR, CLO, MQA, QLO, MEND0 );

InsertionRF: line = (MBEG, QF, QLO, BPM, CLO, COR, CLO, MQA,
QLO, MQD21, QLO, BPM, CLO, COR, CLO, MQA1,
QLO, MQF21, QLO, BPM, CLO, COR, CLO, MQA2,
QLO, MQD11, QLO, BPM, CLO, COR, CLO, MQA2,
QLO, MQF11, QLO, BPM, CLO, COR, CLO, STRRF,RFC,STRRF,MQA3,
QLO, QDS,   QLO, BPM, CLO, COR, CLO, MQA4, QLO, QFS, QLO, BPM, CLO, COR, CLO, MQA4,
QLO, QDS,   QLO, BPM, CLO, COR, CLO, MQA4, QLO, QFS, QLO, BPM, CLO, COR, CLO, MQA4,
QLO, QDS,   QLO, BPM, CLO, COR, CLO, MQA4, QLO, QFS, QLO, BPM, CLO, COR, CLO, MQA4,
QLO, QDS,   QLO, BPM, CLO, COR, CLO, MQA4,
QLO, MQF11, QLO, BPM, CLO, COR, CLO, MQA2,
QLO, MQD11, QLO, BPM, CLO, COR, CLO, MQA2,
QLO, MQF21, QLO, BPM, CLO, COR, CLO, MQA1,
QLO, MQD21, QLO, BPM, CLO, COR, CLO, MQA, QLO, MEND);


RING: line=(Insertion1,ARC,InsertionRF,ARC,Insertion2);



kqfarc             =        0.531735858 ;
kqdarc             =      -0.6129531437 ;
kqfstr             =       0.4414675645 ;
kqdstr             =      -0.4380690037 ;
kmqf11             =       0.4969483914 ;
kmqd11             =      -0.4547823656 ;
kmqf21             =       0.5148466767 ;
kmqd21             =      -0.5833767677 ;
ksfarc             =        12.68509266 ;
ksdarc             =       -25.88088136 ;

use, period = RING;
twiss, chrom;

//SURVEY, SEQUENCE=insertion, FILE="insert.dat";
//stop;
//---------------------------------;

// Optical Fitting routines

/*
USE, PERIOD=ArcMain;
 MATCH, USE_MACRO;
    VARY, NAME=kqfarc,  STEP = 0.00001;
    VARY, NAME=kqdarc,  STEP = 0.00001;

    B1: MACRO = { TWISS, CHROM, SEQUENCE=ArcMain; }
    CONSTRAINT, EXPR= TABLE(SUMM,BETXMAX)<30;
    CONSTRAINT, EXPR= TABLE(SUMM,BETYMAX)<30;
    CONSTRAINT, EXPR = TABLE(SUMM,Q2) = 26.07997883/80;
    CONSTRAINT, EXPR = TABLE(SUMM,Q1) = 20/80;//0.275;//0.376;   // Picks the number of
    SIMPLEX, CALLS = 5000, TOLERANCE = 1.E-12;
   ENDMATCH;






USE, PERIOD = ArcMain;
   SAVEBETA, LABEL=BETA_CELL, PLACE=#E;
   TWISS, SEQUENCE=ArcMain, CHROM, RMATRIX;
// TWISS, SEQUENCE=ArcMain, CHROM, RMATRIX;
//PLOT, HAXIS, VAXIS1=BETX,BETY,VAXIS2=DX,HAXIS=S,COLOUR=100,INTERPOLATE=TRUE,
// TABLE=twiss,TITLE="Arc Cell";

//stop;


//stop;


USE, PERIOD =  InsertionRF ;
MATCH, USE_MACRO;
VARY, NAME=KQFstr, STEP=0.00001;
VARY, NAME=KQDstr, STEP=0.00001;
VARY, NAME=KMQF11, STEP=0.00001;
VARY, NAME=KMQD11, STEP=0.00001;
VARY, NAME=KMQF21, STEP=0.00001;
VARY, NAME=KMQD21, STEP=0.00001;

//B1: MACRO = {USE, PERIOD = acell; 
//SAVEBETA, LABEL=BETA_CELL, PLACE=#E;
//TWISS,CHROM, SEQUENCE=acell;
//}

B2: MACRO = {USE, PERIOD = Insertion; TWISS,CHROM, SEQUENCE= Insertion, BETA0=BETA_CELL;}


CONSTRAINT, WEIGHT=10.0, EXPR= TABLE(TWISS, MEND, ALFX)=BETA_CELL->ALFX;
CONSTRAINT, EXPR= TABLE(TWISS, MEND, BETX)=BETA_CELL->BETX;
CONSTRAINT, WEIGHT=10.0, EXPR= TABLE(TWISS, MEND, ALFY)=BETA_CELL->ALFY;
CONSTRAINT, EXPR= TABLE(TWISS, MEND, BETY)=BETA_CELL->BETY;

//CONSTRAINT, WEIGHT=100.0, EXPR= TABLE(TWISS, mbeg, DPX)=0.0;
//CONSTRAINT, WEIGHT=100.0, EXPR= TABLE(TWISS, mbeg, DX)=0.0;
      CONSTRAINT, EXPR= TABLE(SUMM, DXMAX) < 2;
      CONSTRAINT, EXPR= TABLE(SUMM,BETXMAX)<26;
      CONSTRAINT, EXPR= TABLE(SUMM,BETYMAX)<27;
      

 CONSTRAINT, WEIGHT=1000.0, EXPR=TABLE(TWISS,MEND,MUY)-TABLE(TWISS,MBEG,MUY)=2.0;
 CONSTRAINT, WEIGHT=10.0, EXPR=TABLE(TWISS,MEND,MUX)-TABLE(TWISS,MBEG,MUX)=1.55998;
//SIMPLEX, CALLS = 5000, TOLERANCE = 1.E-12;
//SIMPLEX, CALLS = 5000, TOLERANCE = 1.E-12;
//SIMPLEX, CALLS = 5000, TOLERANCE = 1.E-12;
lmdif, calls=5000, tolerance=1.E-12;
   ENDMATCH;

USE, PERIOD = Insertion; TWISS,CHROM, SEQUENCE= Insertion, BETA0=BETA_CELL;

//stop;


USE, PERIOD=RING;

MATCH, USE_MACRO;
      VARY, NAME=KSFarc, STEP = 0.00001;
      VARY, NAME=KSDarc, STEP = 0.00001;
     // VARY, NAME=KSFstr, STEP = 0.00001;
     // VARY, NAME=KSDstr, STEP = 0.00001;

      B5: MACRO = { TWISS, CHROM, SEQUENCE=RING;}

      // Setting the chromaticities.
      CONSTRAINT, WEIGHT=1000.0, EXPR= TABLE(SUMM, DQ1) =1;
      CONSTRAINT, WEIGHT=1000.0, EXPR= TABLE(SUMM, DQ2) =1;
      lmdif, calls=5000, tolerance=1.E-12;
    //  SIMPLEX, CALLS = 5000, TOLERANCE = 1.E-12;
   ENDMATCH;
   


*/


USE, PERIOD=ring;
select, flag=my_model, column=name,keyword,s,l,angle,betx,alfx,bety,alfy,muy,y,k1l,k2l,h1,h2,x,px,py,DX;
//select, flag=my_model, column=name,keyword,s,l,betx,alfx,bety,alfy,DX,MUX;
SAVEBETA, LABEL=BETA_CELL2, PLACE=#E;
twiss, chrom, sequence=ring, table=my_model, file="RCSV4S0.twiss";

value,   KQFarc,   KQDarc, KQFstr, KQDstr, KMQF11, KMQD11, KMQF21, KMQD21, KSFarc, KSDarc;
value, table(my_model,mend,muy)-table(my_model,mbeg,muy);
value, table(my_model,mend,mux)-table(my_model,mbeg,mux);
Qy0 = TABLE(SUMM,Q2);
Qx0 = TABLE(SUMM,Q1);
CHx0 = TABLE(SUMM,DQ1);
CHy0 = TABLE(SUMM,DQ2);


save, sequence=ring, file="RCSV4S0.seq";
stop;

system, "rm blue.twiss";
system, "rm stream";
yrms = 0;
iseed = 401;
i=1;
value,i;
while(i < 100){
j = i*iseed+4;
USE, sequence= ring;
EOPTION, SEED = j, ADD=FALSE;
SELECT, FLAG = ERROR, CLASS = rbend;
SELECT, FLAG = ERROR, CLASS = quadrupole;
EALIGN, DX := 0.0*TGAUSS(2), DY:= 1.0e-4*TGAUSS(2), DPSI:=1.0e-4*TGAUSS(2);
//EFCOMP,	ORDER=1, RADIUS=1,	DKN={	0, 2.5e-2*TGAUSS(2.5), 0, 0, 0, 0, 0, 0, 0, 0,			0, 0, 0, 0, 0, 0, 0, 0, 0, 0};

//apply corrections
twiss, chrom, sequence=ring, table=my_model, file="blue.twiss";
CORRECT, PLANE = y, MODE= svd;
twiss, chrom, sequence=ring, table=my_model, file="blue.twiss";
 CORRECT, PLANE = x, MODE= svd;
//twiss, chrom, sequence=ring, table=my_model, file="blue.twiss";

//apply corrections
twiss, chrom, sequence=ring, table=my_model, file="blue.twiss";
 CORRECT, PLANE = y, MODE= svd;
 twiss, chrom, sequence=ring, table=my_model, file="blue.twiss";
 CORRECT, PLANE = x, MODE= svd;
twiss, chrom, sequence=ring, table=my_model, file="blue.twiss";

select,  flag=my_model, column=name,keyword,s,l,angle,betx,alfx,bety,alfy,muy,y,k1l,k2l,h1,h2,x,px,py,DX;
twiss, chrom, sequence=RING, table=my_model, file="blue.twiss";
yrms = TABLE(SUMM,ycorms);
ymax = TABLE(SUMM,ycomax);
beta1 = TABLE(my_model, MEND, BETY);
value, beta1;
value, yrms;
value, ymax;
value, j;
if( yrms >1.0e-10){
print, text="TWISS suceeded";
ASSIGN, echo="V4S0F18GeV_1p0em4R1p0em4C.dat";
printf, text="seed=%f Y rms=%f and Ymax=%f",value= j, TABLE(SUMM,ycorms)*1000,TABLE(SUMM,ycomax)*1000;
ASSIGN, echo=STREAM;
system, "rm Imp.dat";
system, "./a.out";
system, "rm blue.twiss";
system, "python CalRCSImpPol_18GeV.py Imp.dat >> V4S0F18GeV_1p0em4R1p0em4C.dat";
i = i+1;
}ELSE{ iseed = iseed + 1; print, text="TWISS failed iterating iseed";}
value,i, iseed, yrms,j;
yrms = 0;
 };